i1: u16 = +55
i2 = -123

i3 = i1 + i2

fn f1(p1, p2: i32) {
  p1 + p2 * p1 * p2
}

fn f2(a, b: i32) {
  a + b
}

fn map<FROM, TO>(l: List<FROM>, f: fn(FROM, TO)) {
  for v in l {
    f(v)
  }
}

type List<T> {
  content: T,
  head: ptr List,
  tail: ptr List,
  next: ptr List,
}

fn add<T>(l1, l2: List<T>) {
  
}

meta genType(name: meta.Symbol, type: meta.Type) {
  type @name {
    @for i in range(0, 3) {
      meta.print("${i}: ${type},")
    }
  }
}

genType(TestAbc, i32)

i4 = f1(i1 i3)
